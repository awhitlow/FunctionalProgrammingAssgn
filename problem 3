
;function definition
(define (sum-up-numbers-simple L )
  ;if the list is empty, display 0 
  (cond
   ((null? L) 0)
   ;if the next value in the list is a list, recursively call the function with the remainder of the list
   ((list? (car L)) (+(sum-up-numbers-simple (car L)) (sum-up-numbers-simple (cdr L))))
